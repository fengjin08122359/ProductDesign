1.简单工厂(一对一)
引入工厂类集成不同对象的创建等公共方法,使用参数做不同的创建
使用一个父类,创建多个子类

product->productA<-factory

可以将product和factory合并

2.工厂模式(一对多)
将工厂抽象出一个抽象工厂和多个具体工厂
调用时调用抽象工厂根据配置文件调用不同的具体工厂

3.抽象工厂(多对多)
多个抽象工厂对应多个具体工厂
不同的产品族对应不同的抽象工厂

4.单例模式
确保当前对象不发生改变不能使用new 方法产生

5.原型
主要应用于对象克隆,区分深拷贝和浅拷贝应用范围广泛

6.建造者
多个复杂对象需要将生成的方法抽象出来

1.适配器
将两个接口间做转换
类似电源适配

2.桥接
适合多维度对象的分离实现
将一个固有维度作为抽象类
将另一个实现维度作为impl的抽象类
然后分别实现具体类
a->a1,a2
|
>
b->b1,b2

3.组合模式
主要使用递归方法处理树形结构

4.装饰模式
装饰抽象类->调用抽象类的方法
装饰具体类调用装饰抽象类的方法或增加调用方法

5.外观
增加一个或多个外观类对互相调用的方法做整理

6.享元
工厂模式增加享元工厂,对内部重复的元素去重,内外的属性分离

7.代理
在原处理逻辑中增加一环,可以在之前或之后插入处理内容